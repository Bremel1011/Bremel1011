
---------------------------------
--- SCORE CREDITICIO EMPRESAS ---
---------------------------------

-------TEAM
----------  PATRICIA LAHURA
----------  BREMEL ARONES

/**************************************************************
***************************************************************
**********************CREACIÓN DE TABLAS***********************
***************************************************************
***************************************************************/

--CREATE DATABASE BDG10;
USE BDG10;
GO

------- INICIO
/* DROPEAR EN ESE ORDEN PARA QUE NO HAYA ERROR CON LAS FK.

DROP TABLE SCORE;
DROP TABLE PAGOS;
DROP TABLE CUOTAS;
DROP TABLE GARANTIAS;
DROP TABLE SECTOR;
DROP TABLE ESTADOS_FINANCIEROS;
DROP TABLE PRESTAMOS;
DROP TABLE EJECUTIVO_RELACION;
DROP TABLE HISTORIAL_CREDITICIO_EXTERNO;
DROP TABLE EMPRESAS;

*/

-- 1. CREACION DE LAS TABLAS A UTILIZAR



-- DROP TABLE EMPRESAS
CREATE TABLE EMPRESAS (
    ID_EMPRESA INT PRIMARY KEY IDENTITY(1,1) ,
    NOMBRE_EMPRESA VARCHAR(255),
    FECHA_REGISTRO DATE,
    ID_SIC VARCHAR(20),
    RUC VARCHAR(20)
);

-- DROP TABLE SECTOR
CREATE TABLE SECTOR (
    ID_SECTOR INT PRIMARY KEY IDENTITY(1,1),
	ID_SIC VARCHAR(20),
    NOMBRE_SECTOR VARCHAR(255)
);

-- DROP TABLE EJECUTIVO_RELACION
CREATE TABLE EJECUTIVO_RELACION (
    ID_EJECUTIVO INT PRIMARY KEY IDENTITY(1,1) ,
    NOMBRES VARCHAR(255),
    APELLIDO_PATERNO VARCHAR(255),
    APELLIDO_MATERNO VARCHAR(255)
);

-- DROP TABLE PRESTAMOS
CREATE TABLE PRESTAMOS (
    ID_OPERACION INT PRIMARY KEY IDENTITY(1,1) ,
    ID_EMPRESA INT FOREIGN KEY REFERENCES EMPRESAS(ID_EMPRESA),
    MONTO FLOAT,
    ESTADO_PRESTAMO VARCHAR(255),
    TASA_INTERES DECIMAL,
    FECHA_INICIO DATE,
    FECHA_VENCIMIENTO DATE,
    ID_EJECUTIVO INT FOREIGN KEY REFERENCES EJECUTIVO_RELACION(ID_EJECUTIVO),
    SITUACION_CONTABLE VARCHAR(50)
);

/*ALTER TABLE PRESTAMOS
ALTER COLUMN SITUACION_CONTABLE VARCHAR(50);*/


-- DROP TABLE GARANTIAS
CREATE TABLE GARANTIAS (
    ID_GARANTIA INT PRIMARY KEY IDENTITY(1,1) ,
    TIPO_GARANTIA VARCHAR(255),
    MONTO FLOAT,
    ID_OPERACION INT FOREIGN KEY REFERENCES PRESTAMOS(ID_OPERACION)
);


--DROP TABLE CUOTAS
CREATE TABLE CUOTAS (
    id INT PRIMARY KEY IDENTITY(1,1) ,
    ID_PRESTAMOS INT FOREIGN KEY REFERENCES PRESTAMOS(ID_OPERACION),
    NUMERO_CUOTA INT NULL,
    MONTO_CUOTA DECIMAL (10,2),
    FECHA_VENCIMIENTO DATE
);


--DROP TABLE PAGOS
CREATE TABLE PAGOS (
    ID_PAGOS INT PRIMARY KEY IDENTITY(1,1) ,
    MONTO_PAGO FLOAT,
    FECHA_PAGO DATE,
    METODO_PAGO VARCHAR(255),
    DIAS_MORA INT,
    ID_CUOTAS INT FOREIGN KEY REFERENCES CUOTAS(id)
);


--DROP TABLE ESTADOS_FINANCIEROS
CREATE TABLE ESTADOS_FINANCIEROS (
    ID_EEFF INT PRIMARY KEY IDENTITY(1,1) ,
    ID_EMPRESA INT FOREIGN KEY REFERENCES EMPRESAS(ID_EMPRESA),
    ANIO DATE,
    VENTAS INT,
   -- UTILIDAD_OPE DECIMAL (10,2),
    COSTOS INT,
    DEUDA INT,
    UTILIDAD_NETA INT
);

--DROP TABLE HISTORIAL_CREDITICIO_EXTERNO
CREATE TABLE HISTORIAL_CREDITICIO_EXTERNO (
    ID_HISTORIAL INT PRIMARY KEY IDENTITY(1,1) ,
	ID_EMPRESA INT FOREIGN KEY REFERENCES EMPRESAS(ID_EMPRESA),
    RUC VARCHAR(20),
    FECHA_MES DATE,
    MORA_SF INT,
    CLASIFICACION_SBS INT,
    NUMERO_DE_IF INT,
    DEUDA_SF DECIMAL (10,2)
);

--DROP TABLE SCORE
CREATE TABLE SCORE (
    ID_SCORE INT PRIMARY KEY IDENTITY(1,1) ,
    ID_EMPRESA INT FOREIGN KEY REFERENCES EMPRESAS(ID_EMPRESA),
    FECHA_EVAL DATE,
    SCORE VARCHAR (15)
);


/*************************************************************
**************************************************************
***********INSERCION DE DATOS EN LAS TABLAS*******************
**************************************************************
**************************************************************/


INSERT INTO EMPRESAS (NOMBRE_EMPRESA, FECHA_REGISTRO, ID_SIC, RUC) VALUES
('TRIVIA PERU', '2022-06-07', 1631, 20601449677),
('LOS SAUCES SUR', '2017-10-11', 4012, 20453939171),
('M & M REPUESTOS', '2020-03-15', 6342, 20101759688),
('YMATEX', '2023-12-23', 5321, 20550393132),
('SC INGENIERIA', '2024-05-01', 3029, 20474868312),
('INMOBILIARIA PARQUE CENTRAL', '2024-05-01', 4012, 20608972979),
('QUATRO LAMBDA', '2021-11-07', 6342, 20607761702),
('NEXA RESOURCES', '2019-08-29', 6140, 20492744833),
('AUTONORT TRUJILLO', '2021-03-02', 6342, 20396419093),
('UNIBELL', '2024-05-01', 3711, 20511451354);



-- Insertar datos en la tabla SECTOR
INSERT INTO SECTOR (ID_SIC,NOMBRE_SECTOR) VALUES
(1631,'PLASTICOS'),
(4012,'INMOBILIARIO'),
(6342,'AUTOMOTRIZ'),
(5321,'CONSUMO'),
(3029,'INDUSTRIA METALICA'),
(6140,'MINERIA'),
(3711,'ASEO');


-- Insertar datos en la tabla EJECUTIVO_RELACION
INSERT INTO EJECUTIVO_RELACION (NOMBRES, APELLIDO_PATERNO, APELLIDO_MATERNO) VALUES
('Juan', 'Perez', 'Garcia'),
('Maria', 'Lopez', 'Martinez'),
('Carlos', 'Hernandez', 'Rodriguez'),
('Ana', 'Gonzalez', 'Fernandez'),
('Luis', 'Sanchez', 'Gomez'),
('Laura', 'Diaz', 'Torres'),
('Jose ', 'Ramirez', 'Vargas'),
('Marta', 'Cruz', 'Morales'),
('Pedro', 'Ortiz', 'Jim nez'),
('Elena', 'Ruiz', 'Navarro');


-- Insertar datos en la tabla PRESTAMOS
INSERT INTO PRESTAMOS (ID_EMPRESA, MONTO, ESTADO_PRESTAMO, TASA_INTERES, FECHA_INICIO, FECHA_VENCIMIENTO, ID_EJECUTIVO, SITUACION_CONTABLE) VALUES
(1, 100000, 'ACTIVO', 5.5, '2022-07-01', '2024-07-01', 1, 'VIGENTE'),
(2, 200000, 'INACTIVO', 6.0, '2017-11-11', '2020-11-11', 2, ''),
(3, 150000, 'ACTIVO', 5.0, '2020-04-15', '2024-10-15', 2, 'VIGENTE'),
(4, 250000, 'ACTIVO', 6.5, '2023-12-23', '2025-12-23', 2, 'VIGENTE'),
(5, 300000, 'ACTIVO', 7.0, '2024-06-01', '2027-06-01', 5, 'VENCIDO'),
(6, 120000, 'ACTIVO', 5.2, '2024-06-01', '2026-06-01', 6, 'VENCIDO'),
(7, 180000, 'INACTIVO', 5.8, '2021-12-07', '2023-12-07', 7, ''),
(8, 220000, 'INACTIVO', 6.3, '2019-09-29', '2023-09-29', 8, ''),
(9, 170000, 'ACTIVO', 5.7, '2021-04-02', '2024-10-02', 9,'VIGENTE'),
(10, 260000, 'ACTIVO', 6.6,'2024-05-01', '2028-05-01', 10,'VIGENTE');


-- Insertar datos en la tabla GARANTIAS
INSERT INTO GARANTIAS (TIPO_GARANTIA, MONTO, ID_OPERACION) VALUES
('Hipoteca', 100000, 1),
('Prenda', 190000, 2),
('Fianza', 180000, 3),
('Hipoteca', 220000, 4),
('Prenda', 300000, 5),
('Fianza', 170000, 6),
('Hipoteca', 100000, 7),
('Prenda', 220000, 8),
('Fianza', 1750000, 9),
('Hipoteca', 270000, 10);

-------cambiar datos--
---Insertar datos en la tabla HISTORIAL_CREDITICIO_EXTERNO

INSERT INTO HISTORIAL_CREDITICIO_EXTERNO (ID_EMPRESA, RUC, FECHA_MES, MORA_SF, CLASIFICACION_SBS, NUMERO_DE_IF, DEUDA_SF) VALUES
(1,'20601449677', '2023-12-31', 16, 0, 2, 5000000),
(2,'20453939171', '2023-12-31', 31, 1, 3, 3500000),
(3,'20101759688', '2023-12-31', 10, 1, 2, 32500000),
(4,'20550393132', '2023-12-31', 8, 3, 4, 15700000),
(5,'20550393132', '2023-12-31', 0, 2, 3, 11300000),
(6,'20608972979', '2023-12-31', 15, 1, 2, 8000000),
(7,'20607761702', '2023-12-31', 0, 1, 3, 25000000),
(8,'20492744833', '2023-12-31', 22, 3, 4, 15294000),
(9,'20396419093', '2023-12-31', 17, 1, 2, 10000000),
(10,'20511451354', '2023-12-31', 0, 2, 3, 4619000);



-- Insertar datos en la tabla ESTADOS_FINANCIEROS
-------TRUNCATE TABLE ESTADOS_FINANCIEROS
INSERT INTO ESTADOS_FINANCIEROS (ID_EMPRESA, ANIO, VENTAS, COSTOS, DEUDA, UTILIDAD_NETA) VALUES
(1, '2023-12-31', 703000, 500000, 3565000, 8001000),
(2, '2023-12-31', 3692000,1500000, 2800000, 992000),
(3, '2023-12-31', 46221000,37457000, 29177000, 4064000),
(4, '2023-12-31', 9165000,4925000, 6813000, 363000),
(5, '2023-12-31', 33921000,20593000, 3291000, 825000),
(6, '2023-12-31', 3036000,1000000, 4550000, 382000),
(7, '2023-12-31', 25548000,10746000, 20862000, 70000),
(8, '2023-12-31', 239801,110000, 12359000, 19678000),
(9, '2023-12-31', 104470000,85000000, 7668000, 2875000),
(10, '2023-12-31', 26849000,13995000, 10675000, 1854000),
(1, '2022-12-31', 503000, 300000, 1565000, 6001000),
(2, '2022-12-31', 4492000,1200000, 2300000, 792000),
(3, '2022-12-31', 42221000,17457000, 29177000, 4064000),
(4, '2022-12-31', 8065000,2925000, 7813000, 363000),
(5, '2022-12-31', 30921000,10593000, 5291000, 1025000),
(6, '2022-12-31', 4036000,1000000, 6550000, 682000),
(7, '2022-12-31', 10548000,10246000, 14862000, 55000),
(8, '2022-12-31', 189801,90000, 12259000, 17678000),
(9, '2022-12-31', 904470000,70000000, 5668000, 2075000),
(10, '2022-12-31', 13849000,9995000, 9675000, 1899000);


-- Insertar datos en la tabla SCORE
-- La columna SCORE queda vacía para realizar los calculos
INSERT INTO SCORE (ID_EMPRESA, FECHA_EVAL) VALUES
(1, '2024-08-31'),
(2, '2024-08-31'),
(3, '2024-08-31'),
(4, '2024-08-31'),
(5, '2024-08-31'),
(6, '2024-08-31'),
(7, '2024-08-31'),
(8, '2024-08-31'),
(9, '2024-08-31'),
(10,'2024-08-31');

-- Insertar datos en la tabla CUOTAS

INSERT INTO CUOTAS (ID_PRESTAMOS, NUMERO_CUOTA, MONTO_CUOTA, FECHA_VENCIMIENTO) VALUES
(1, 6, 1500, '2024-01-01'),
(1, 5, 1500, '2023-12-01'),
(1, 4, 1500, '2023-11-01'),
(1, 3, 1500, '2023-10-01'),
(1, 2, 1500, '2023-09-01'),
(1, 1, 1500, '2023-08-01'),
(3, 4, 2800, '2024-10-15'),
(3, 3, 2800, '2024-09-15'),
(3, 2, 2800, '2024-08-15'),
(3, 1, 2800, '2024-07-15'),
(5, 3, 4000, '2024-08-01'),
(5, 2, 4000, '2024-07-01'),
(5, 1, 4000, '2023-06-01');


-- Insertar datos en la tabla PAGOS
INSERT INTO PAGOS (MONTO_PAGO, FECHA_PAGO, METODO_PAGO, DIAS_MORA, ID_CUOTAS) VALUES
(1500,'2024-01-01','Transferencia',0,1),
(1500,'2023-12-01','CargoCuenta',0,2),
(2800,'2024-07-16','Cheque',1,10),
(1500,'2023-11-01','Transferencia',0,3),
(1500,'2023-10-14','CargoCuenta',13,4),
(1500,'2023-09-26','Cheque',25,5),
(1500,'2023-08-06','Transferencia',5,6),
(4000,'2024-08-26','CargoCuenta',123,11),
(4000,'2024-07-08','Cheque',7,12),
(4000,'2023-06-03','Transferencia',2,13);


/*************************************************************
**************************************************************
**********************CONSULTAS*******************************
**************************************************************
**************************************************************/

---- 1. Obtener todas las empresas y su sector correspondiente

SELECT E.NOMBRE_EMPRESA, S.NOMBRE_SECTOR
FROM EMPRESAS E
INNER JOIN SECTOR S ON E.ID_SIC = S.ID_SIC
WHERE NOMBRE_EMPRESA LIKE'%P%';

---- 2. Listar los préstamos activos (con estado 'ACTIVO') y su ejecutivo a cargo

SELECT P.ID_OPERACION, P.MONTO, P.TASA_INTERES, P.FECHA_INICIO, P.FECHA_VENCIMIENTO, E.NOMBRES, E.APELLIDO_PATERNO
FROM PRESTAMOS P
INNER JOIN EJECUTIVO_RELACION E ON P.ID_EJECUTIVO = E.ID_EJECUTIVO
WHERE P.ESTADO_PRESTAMO = 'ACTIVO';


---- 3. Contar el número de empresas registradas por año

SELECT YEAR(FECHA_REGISTRO) AS ANIO, COUNT(*) AS NUM_EMPRESAS
FROM EMPRESAS
GROUP BY YEAR(FECHA_REGISTRO);

---- 4. Obtener el total de deuda acumulada por empresa en los estados financieros

SELECT E.NOMBRE_EMPRESA, SUM(EF.DEUDA) AS TOTAL_DEUDA
FROM ESTADOS_FINANCIEROS EF
INNER JOIN EMPRESAS E ON EF.ID_EMPRESA = E.ID_EMPRESA
GROUP BY E.NOMBRE_EMPRESA;

---- 5. Encontrar las empresas con más de un préstamo activo

SELECT E.NOMBRE_EMPRESA, COUNT(P.ID_OPERACION) AS NUMERO_PRESTAMOS
FROM EMPRESAS E
INNER JOIN PRESTAMOS P ON E.ID_EMPRESA = P.ID_EMPRESA
WHERE P.ESTADO_PRESTAMO = 'ACTIVO'
GROUP BY E.NOMBRE_EMPRESA
HAVING COUNT(P.ID_OPERACION) <= 2;

---- 6. Obtener las garantías asociadas a un préstamo específico

SELECT G.TIPO_GARANTIA, sum(G.MONTO) AS MONTO_GARANTIZADO, 
sum(P.MONTO) AS PRESTAMO, 
ROUND(SUM(G.MONTO)/SUM(P.MONTO),2,1) AS COBERTURA
FROM GARANTIAS G
LEFT JOIN PRESTAMOS P ON G.ID_OPERACION = P.ID_OPERACION
GROUP BY G.TIPO_GARANTIA

---- 7. Calcular el score crediticio de las empresas 


UPDATE SCORE 
SET SCORE = (
    SELECT TOP 1
        CASE 
            WHEN H.MORA_SF <= 15 OR (H.CLASIFICACION_SBS = 0 AND H.NUMERO_DE_IF < 2 
			AND (H.deuda_sf / E.VENTAS) <= 0.5) THEN 'NIVEL BAJO'
            WHEN H.MORA_SF <= 50 AND H.MORA_SF > 15 AND H.CLASIFICACION_SBS = 1 
			AND (H.deuda_sf / E.VENTAS) <= 1 AND (H.deuda_sf / E.VENTAS) > 0.5 THEN 'NIVEL MEDIO'
            WHEN H.MORA_SF <= 120 AND H.MORA_SF > 50 AND H.CLASIFICACION_SBS = 2 
			AND (H.deuda_sf / E.VENTAS) <= 1.5 AND (H.deuda_sf / E.VENTAS) > 1 THEN 'NIVEL ALTO MEDIO'
            WHEN H.MORA_SF > 120 AND H.CLASIFICACION_SBS IN (3, 4) 
			AND (H.deuda_sf / E.VENTAS) > 1.5 THEN 'NIVEL ALTO'
            ELSE 'NIVEL ALTO' 
        END 
    FROM HISTORIAL_CREDITICIO_EXTERNO H
    LEFT JOIN ESTADOS_FINANCIEROS E ON H.ID_EMPRESA = E.ID_EMPRESA
    WHERE S.ID_EMPRESA = H.ID_EMPRESA
)
FROM SCORE S;


---- 8. Conocer el score para cada empresa con prestamos vigentes y sector asociado

-- CREAMOS TABLA TEMPORAL 
SELECT  A.ID_EMPRESA, A.RUC, A.NOMBRE_EMPRESA, B.NOMBRE_SECTOR INTO #TEMP1
FROM
EMPRESAS A LEFT JOIN SECTOR B ON A.ID_SIC = B.ID_SIC;

-- CREAMOS CONSULTA
SELECT A.ID_EMPRESA,A.NOMBRE_EMPRESA, C.SITUACION_CONTABLE, A.NOMBRE_SECTOR,B.SCORE
FROM #TEMP1 A
LEFT JOIN SCORE B ON A.ID_EMPRESA = B.ID_EMPRESA 
LEFT JOIN PRESTAMOS C ON A.ID_EMPRESA = C.ID_EMPRESA 
WHERE C.SITUACION_CONTABLE IN ('VIGENTE');

--DROP TABLE #TEMP1



---- 9. Procedure para registrar un nuevo préstamo: Este procedimiento permite registrar un nuevo 
----préstamo asociado a una empresa, un ejecutivo, y genera una garantía inicial si es proporcionada.

CREATE PROCEDURE RegistrarPrestamo
    @ID_EMPRESA INT,
    @MONTO FLOAT,
    @ESTADO_PRESTAMO VARCHAR(255),
    @TASA_INTERES DECIMAL(10,2),
    @FECHA_INICIO DATE,
    @FECHA_VENCIMIENTO DATE,
    @ID_EJECUTIVO INT,
    @SITUACION_CONTABLE VARCHAR(50),
    @TIPO_GARANTIA VARCHAR(255) = NULL,
    @MONTO_GARANTIA FLOAT = NULL
AS
BEGIN
    -- Insertar nuevo préstamo
    INSERT INTO PRESTAMOS (ID_EMPRESA, MONTO, ESTADO_PRESTAMO, TASA_INTERES, FECHA_INICIO, FECHA_VENCIMIENTO, ID_EJECUTIVO, SITUACION_CONTABLE)
    VALUES (@ID_EMPRESA, @MONTO, @ESTADO_PRESTAMO, @TASA_INTERES, @FECHA_INICIO, @FECHA_VENCIMIENTO, @ID_EJECUTIVO, @SITUACION_CONTABLE);

	-- Obtener el ID del préstamo recién insertado
    DECLARE @ID_OPERACION INT;
    SET @ID_OPERACION = SCOPE_IDENTITY(); 

    -- Insertar garantía asociada, si se proporcionó
    IF @TIPO_GARANTIA IS NOT NULL AND @MONTO_GARANTIA IS NOT NULL
    BEGIN
        INSERT INTO GARANTIAS (TIPO_GARANTIA, MONTO, ID_OPERACION)
        VALUES (@TIPO_GARANTIA, @MONTO_GARANTIA, @ID_OPERACION);
    END;
END;


---- 10. Procedure para consultar la situación financiera de una empresa
---- Este procedimiento muestra el estado financiero (ventas, costos, deuda, utilidad neta) de una empresa en un año específico.

CREATE PROCEDURE ConsultarSituacionFinancieraEmpresa
    @ID_EMPRESA INT,
    @ANIO DATE
AS
BEGIN
    SELECT VENTAS, COSTOS, DEUDA, UTILIDAD_NETA
    FROM ESTADOS_FINANCIEROS
    WHERE ID_EMPRESA = @ID_EMPRESA AND ANIO = @ANIO;
END;

